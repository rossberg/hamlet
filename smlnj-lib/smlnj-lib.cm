(* smlnj-lib.cm
 *
 * COPYRIGHT (c) 1996 AT&T Research.
 * COPYRIGHT (c) 1998,1999 Bell Labs, Lucent Technologies
 *
 * The sources specification for the SML/NJ Utility library; part of the
 * SML/NJ Library suite.
 *)

(* Trimmed down to what's needed for HaMLet, and sorted for MLton. --AR *)

Library

(*
signature ARRAY_SORT
signature ATOM
signature BIT_ARRAY
signature BIT_VECTOR
signature CHAR_MAP
signature DYNAMIC_ARRAY
*)
signature FIFO
(*
signature FORMAT
signature HASH_KEY
signature HASH_TABLE
signature INT_INF
signature IO_UTIL
signature GET_OPT
*)
signature LIB_BASE
(*
signature LIST_FORMAT
signature LIST_SORT
signature LIST_XPROD
signature MONO_ARRAY_SORT
signature MONO_DYNAMIC_ARRAY
signature MONO_HASH_TABLE
signature MONO_HASH2_TABLE
*)
signature ORD_KEY
signature ORD_MAP
signature ORD_SET
(*
signature PARSER_COMB
signature PATH_UTIL
signature PROP_LIST
*)
signature QUEUE
(*
signature RAND
signature RANDOM
signature SCAN
signature SPLAY_TREE
signature UREF

structure ArrayQSort
structure Atom
structure AtomBinaryMap		(* to be removed *)
structure AtomBinarySet		(* to be removed *)
structure AtomRedBlackMap
structure AtomRedBlackSet
structure AtomMap
structure AtomSet
structure AtomTable
structure BitArray
(****
structure BitVector
****)
structure CharMap
structure DynamicArray
*)
structure Fifo
(*
structure Format
structure HashString
structure HashTable
structure IntBinaryMap		(* to be removed *)
structure IntBinarySet		(* to be removed *)
structure IntInf
structure IntListMap
structure IntListSet
structure IntRedBlackMap
structure IntRedBlackSet
structure IOUtil
structure GetOpt
*)
structure LibBase
(*
structure ListFormat
structure ListMergeSort
structure ListXProd
structure ParserComb
structure PathUtil
structure PropList
*)
structure Queue
(*
structure Rand
structure Random
structure Scan
structure SimpleURef
structure SplayTree
structure TimeLimit
structure URef

functor ArrayQSortFn
functor BSearchFn
*)
functor BinaryMapFn
functor BinarySetFn
(*
functor DynamicArrayFn
functor HashTableFn
functor Hash2TableFn
functor KeywordFn
functor ListMapFn
functor ListSetFn
functor MonoArrayFn
functor RedBlackMapFn
functor RedBlackSetFn
functor SplayMapFn
functor SplaySetFn
*)

is

#if defined(NEW_CM)
$/basis.cm
#endif

(*
array-qsort-fn.sml
array-qsort.sml
array-sort-sig.sml
atom-sig.sml
atom-binary-map.sml
atom-binary-set.sml
atom-redblack-map.sml
atom-redblack-set.sml
atom-map.sml
atom-set.sml
atom-table.sml
atom.sml
binary-map-fn.sml
binary-set-fn.sml
bit-array-sig.sml
bit-array.sml
bit-vector-sig.sml
(****
bit-vector.sml
****)
bsearch-fn.sml
char-map-sig.sml
char-map.sml
dynamic-array-sig.sml
dynamic-array.sml
dynamic-array-fn.sml
fifo-sig.sml
fifo.sml
fmt-fields.sml
format-sig.sml
format.sml
hash-key-sig.sml
hash-string.sml
hash-table-rep.sml
hash-table-sig.sml
hash-table.sml
hash-table-fn.sml
hash2-table-fn.sml
keyword-fn.sml
int-binary-map.sml
int-binary-set.sml
int-inf-sig.sml
int-inf.sml
int-list-map.sml
int-list-set.sml
int-redblack-map.sml
int-redblack-set.sml
io-util-sig.sml
io-util.sml
getopt-sig.sml
getopt.sml
lib-base-sig.sml
lib-base.sml
list-format-sig.sml
list-format.sml
list-map-fn.sml
list-mergesort.sml
list-set-fn.sml
list-xprod-sig.sml
list-xprod.sml
listsort-sig.sml
mono-array-fn.sml
mono-array-sort-sig.sml
mono-dynamic-array-sig.sml
mono-hash-table-sig.sml
mono-hash2-table-sig.sml
ord-key-sig.sml
ord-map-sig.sml
ord-set-sig.sml
parser-comb-sig.sml
parser-comb.sml
path-util-sig.sml
path-util.sml
plist-sig.sml
plist.sml
queue-sig.sml
queue.sml
rand-sig.sml
rand.sml
random-sig.sml
random.sml
real-format.sml
redblack-map-fn.sml
redblack-set-fn.sml
scan-sig.sml
scan.sml
simple-uref.sml
splay-map-fn.sml
splay-set-fn.sml
splaytree-sig.sml
splaytree.sml
time-limit.sml
uref-sig.sml
uref.sml
*)

(* Need only this for HaMLet... (indentation needed for Makefile hack) *)
 lib-base-sig.sml
 lib-base.sml
 fifo-sig.sml
 fifo.sml
 queue-sig.sml
 queue.sml
 ord-key-sig.sml
 ord-map-sig.sml
 ord-set-sig.sml
 binary-map-fn.sml
 binary-set-fn.sml
